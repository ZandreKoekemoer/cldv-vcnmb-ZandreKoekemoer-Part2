@model MVCRetailStore.Models.Order
@using Microsoft.AspNetCore.Mvc.Rendering

@{
    var customers = ViewData["Customers"] as List<MVCRetailStore.Models.Customer>;
    var products = ViewData["Products"] as List<MVCRetailStore.Models.Product>;
}

<h1>Create Order</h1>

<form asp-action="Create" method="post">
    @Html.AntiForgeryToken()
    <div asp-validation-summary="All" class="text-danger"></div>

    <div class="form-group mb-2">
        <label>Select Customer</label>
        <select asp-for="customerId" class="form-control"
                asp-items="@(new SelectList(customers, "RowKey", "customerName"))">
            <option value="">-- Select Customer --</option>
        </select>
        <span asp-validation-for="customerId" class="text-danger"></span>
    </div>

    <div class="form-group mb-2">
        <label>Select Product</label>
        <select asp-for="productId" class="form-control"
                asp-items="@(new SelectList(products, "RowKey", "ProductName"))">
            <option value="">-- Select Product --</option>
        </select>
        <span asp-validation-for="productId" class="text-danger"></span>
    </div>

    <div class="form-group mb-2">
        <label asp-for="orderQuantity"></label>
        <input asp-for="orderQuantity" class="form-control" type="number" min="1" value="1" />
        <span asp-validation-for="orderQuantity" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary mt-2">Submit Order</button>
</form>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
